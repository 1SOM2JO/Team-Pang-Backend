name: CI/CD

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ secrets.secerts.NODE_ENV }}
      PORT: ${{ secrets.PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PWD: ${{ secrets.DB_PWD }}
      ACCESS_TOKEN_VALIDITY_DAYS: ${{ secrets.ACCESS_TOKEN_VALIDITY_DAYS }}
      REFRESH_TOKEN_VALIDITY_DAYS: $${{ secrets.REFRESH_TOKEN_VALIDITY_DAYS }}
      TOKEN_ISSUER: ${{ secrets.TOKEN_ISSUER }}
      TOKEN_AUDIENCE: ${{ secrets.TOKEN_AUDIENCE }}
      TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
      APIKEY: ${{ secrets.APIKEY }}
      LOG_DIR: ${{ secrets.LOG_DIR }  }

    strategy:
      matrix:
        node-version: [14.5.0]

    steps:
      - uses: actions/checkout@v2

      - name: NodeJS Installation ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Dependencies Installation
        run: npm ci

      - name: build
        run: npm run build

      - name: test
        run: npm test

  CD:
    runs-on: ubuntu-latest
    needs: CI

    steps:
      - uses: actions/checkout@v2

      - name: docker image build
        run: docker-compose up --build

      - name: upload to registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: 1som2jo
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
